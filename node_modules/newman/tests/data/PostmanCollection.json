{
	"id": "f5544ddb-8162-49d7-bf8a-ede07747253a",
	"name": "Postman Demo Server",
	"description": "Demo Postman server API. Will be used for tutorials and documentation within Postman",
	"order": [],
	"folders": [
		{
			"id": "19a1981e-fc83-2d0c-abf4-e003e614f809",
			"name": "App",
			"description": "",
			"order": [
				"523cd71d-a3ea-3da4-04d8-cf08ab61107a",
				"416d05be-f13c-0d55-e378-7c2f563b2bfb",
				"908a4261-360e-6fd0-1ce2-becfbd7c652f",
				"44039ebb-14d1-0673-5c61-e98db32ee78c",
				"d934dd96-cc65-b30d-abea-3b965dc53b42",
				"b6f829b9-511d-d29f-fddc-6f1530bd0196",
				"dc274c4c-3a2e-e2b4-e26c-fe21b0a2223d",
				"5f26a3a9-fc90-d031-bffc-dc887d0fc92c",
				"16167f2b-2273-1608-9aa3-d2e725a4f9f2",
				"cbb99bdd-928a-f7bf-013a-d20e79a51516"
			],
			"collection_name": "Postman Demo Server",
			"collection_id": "f5544ddb-8162-49d7-bf8a-ede07747253a"
		},
		{
			"id": "ba8f9e57-53fb-9b41-f20b-ee74c970a5ec",
			"name": "Debug",
			"description": "",
			"order": [
				"c20109f0-8a08-87cd-7629-4a669b983156",
				"155decc9-7d1d-b502-46a4-729cc4ced402",
				"9f37b86d-48b1-d57d-a3a1-e28773c6072f",
				"3941be82-4d38-ff56-af1d-ac2e30417fa3",
				"fdc4ca0d-70ae-2c44-c12f-482616431881",
				"e2170db7-3261-0194-b320-bf90b781844a",
				"dd3064e0-968c-fb2c-89a5-308da6ce6397",
				"94a4ea5a-eb8b-0e02-1e6f-54f7bb133ee3",
				"fd2c3334-194b-70b2-187f-a08b687ffde2"
			],
			"collection_name": "Postman Demo Server",
			"collection_id": "f5544ddb-8162-49d7-bf8a-ede07747253a"
		}
	],
	"timestamp": 1395310638912,
	"synced": false,
	"requests": [
		{
			"id": "155decc9-7d1d-b502-46a4-729cc4ced402",
			"headers": "",
			"url": "{{url}}/status",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"time": 1396961100005,
			"name": "Status",
			"description": "Return the status of the API with the timestamp.",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "16167f2b-2273-1608-9aa3-d2e725a4f9f2",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/blog/users/tokens/",
			"pathVariables": {},
			"method": "POST",
			"data": "{\n  \"username\": \"abhinav\",\n  \"password\": \"abc\"\n}",
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Raw data has username\"] = _.contains(request.data, 'abhinav')",
			"time": 1396961068888,
			"name": "Get new token for user",
			"description": "POST on this endpoint will create a new token provided the username and password is correct. The returned token will be used to make subsequent requests.",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "3941be82-4d38-ff56-af1d-ac2e30417fa3",
			"headers": "",
			"url": "{{url}}/get",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"time": 1396961105692,
			"name": "GET",
			"description": "Similar to httpbin.org/get. Return GET data.",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "416d05be-f13c-0d55-e378-7c2f563b2bfb",
			"headers": "",
			"url": "{{url}}/blog/posts/{{id}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests['validate env variable'] = environment.url === 'http://localhost:5000'; tests['user id check'] = environment['user_id'] == 1",
			"time": 1396957487008,
			"name": "Blog post",
			"description": "Return blog post with that ID",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "44039ebb-14d1-0673-5c61-e98db32ee78c",
			"headers": "",
			"url": "{{url}}/blog/posts/{{id}}",
			"pathVariables": {},
			"method": "DELETE",
			"data": "",
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;",
			"time": 1396957823883,
			"name": "Delete post",
			"description": "Delete the existing blog post",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "523cd71d-a3ea-3da4-04d8-cf08ab61107a",
			"headers": "",
			"url": "{{url}}/blog/posts",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1396957495537,
			"name": "Blog posts",
			"description": "Return all blog posts",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "5f26a3a9-fc90-d031-bffc-dc887d0fc92c",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/blog/users/",
			"pathVariables": {},
			"method": "POST",
			"data": "{\n  \"username\": \"abhinav\",\n  \"password\": \"abc\"\n}",
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"time": 1396961064627,
			"name": "Create new user",
			"description": "Create a new user with the given username and password.",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "908a4261-360e-6fd0-1ce2-becfbd7c652f",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/blog/posts",
			"pathVariables": {},
			"method": "POST",
			"data": "{\n  \"post\": \"This is a new post\"\n}",
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"time": 1396957765546,
			"name": "New post without token",
			"description": "Create a new blog post",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "94a4ea5a-eb8b-0e02-1e6f-54f7bb133ee3",
			"headers": "",
			"url": "{{url}}/cookies/delete?key=name",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = UndefinedValue === 200;",
			"time": 1396961125819,
			"name": "Cookies/Delete",
			"description": "Similar to httpbin.org/cookies. Delete a cookie.",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "9f37b86d-48b1-d57d-a3a1-e28773c6072f",
			"headers": "X-Newman: Yes",
			"url": "{{url}}/headers",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Request header has X-Newman\"] = _.has(request.headers, 'X-Newman');",
			"time": 1396961102795,
			"name": "Headers",
			"description": "Similar to httpbin.org/headers. Return all the headers passed to it.",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "b6f829b9-511d-d29f-fddc-6f1530bd0196",
			"headers": "",
			"url": "{{url}}/blog/users/1",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"time": 1396957928269,
			"name": "Get user details",
			"description": "Get user details for a user",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "c20109f0-8a08-87cd-7629-4a669b983156",
			"headers": "",
			"url": "{{url}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1396961095944,
			"name": "Default",
			"description": "Returns a JSON with all the available API endpoints.",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "cbb99bdd-928a-f7bf-013a-d20e79a51516",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/blog/users/tokens/{{token_id}}",
			"pathVariables": {},
			"method": "DELETE",
			"data": "",
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"time": 1396961072459,
			"name": "Delete user token",
			"description": "Delete the token. Effectively signing out the user.",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "d934dd96-cc65-b30d-abea-3b965dc53b42",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/blog/posts/{{id}}",
			"pathVariables": {},
			"method": "PUT",
			"data": "{\n  \"post\": \"This is a modified post\"\n}",
			"dataMode": "raw",
			"version": 2,
			"tests": "postman.setEnvironmentVariable('url', 'http://dump.getpostman.com')",
			"time": 1396957899073,
			"name": "Modify post",
			"description": "Modify the existing post",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "dc274c4c-3a2e-e2b4-e26c-fe21b0a2223d",
			"headers": "",
			"url": "{{url}}/blog/users/",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "postman.setEnvironmentVariable('random', '123')",
			"time": 1396961060399,
			"name": "Get all users",
			"description": "Get all current users of the blog.",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "dd3064e0-968c-fb2c-89a5-308da6ce6397",
			"headers": "",
			"url": "{{url}}/cookies",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Cookies are set\"] = JSON.parse(responseBody).cookies.name === 'value';",
			"time": 1396961112193,
			"name": "Cookies",
			"description": "Similar to httpbin.org/cookies. Return cookies set in the domain.",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "e2170db7-3261-0194-b320-bf90b781844a",
			"headers": "",
			"url": "{{url}}/cookies/set?name=value",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"time": 1396961115031,
			"name": "Cookies/Set",
			"description": "Similar to httpbin.org/cookies. Set a cookie",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "fd2c3334-194b-70b2-187f-a08b687ffde2",
			"headers": "",
			"url": "{{url}}/delay/3",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Resp Time is > 3\"] = \nresponseTime > 3000;",
			"time": 1396961132032,
			"name": "Delay",
			"description": "Return response after a few seconds",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		},
		{
			"id": "fdc4ca0d-70ae-2c44-c12f-482616431881",
			"headers": "",
			"url": "{{url}}/post",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"time": 1396961108820,
			"name": "POST",
			"description": "Similar to httpbin.org/post. Return POST data.",
			"collectionId": "f5544ddb-8162-49d7-bf8a-ede07747253a",
			"responses": [],
			"synced": false
		}
	]
}
